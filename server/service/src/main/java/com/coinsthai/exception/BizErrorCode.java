package com.coinsthai.exception;

import org.springframework.http.HttpStatus;

import static org.springframework.http.HttpStatus.*;

/**
 * @author
 */
public enum BizErrorCode implements ErrorCode {

    REGISTER_TIMEOUT(BAD_REQUEST),
    REGISTER_ACTIVATE_ILLEGAL(BAD_REQUEST),

    USER_EMAIL_EMPTY(BAD_REQUEST),
    USER_EMAIL_ILLEGAL(BAD_REQUEST),
    USER_PASSWORD_ILLEGAL(BAD_REQUEST),
    USER_EMAIL_EXISTS(CONFLICT),
    USER_NOT_FOUND(NOT_FOUND),
    USER_NOT_ACTIVE(CONFLICT),

    PASSWORD_OLD_MISMATCH(BAD_REQUEST),
    PASSWORD_NEW_ILLEGAL(BAD_REQUEST),
    PASSWORD_EMAIL_ILLEGAL(BAD_REQUEST),
    PASSWORD_CODE_ILLEGAL(BAD_REQUEST),

    COIN_NAME_EMPTY(BAD_REQUEST),
    COIN_FULL_NAME_EMPTY(BAD_REQUEST),
    COIN_NAME_EXISTS(CONFLICT),
    COIN_FULL_NAME_EXISTS(CONFLICT),
    COIN_NOT_FOUND(NOT_FOUND),
    COIN_TOKEN_ILLEGAL(NOT_FOUND),
    COIN_UNSUPPORTED(BAD_REQUEST),

    MARKET_NOT_FOUND(NOT_FOUND),
    MARKET_EXISTS(CONFLICT),

    WALLET_COIN_EMPTY(BAD_REQUEST),
    WALLET_USER_EMPTY(BAD_REQUEST),
    WALLET_ADDRESS_EMPTY(BAD_REQUEST),
    WALLET_PRIVATE_KEY_EMPTY(BAD_REQUEST),
    WALLET_ADDRESS_EXISTS(CONFLICT),
    WALLET_EXISTS(CONFLICT),
    WALLET_NOT_FOUND(NOT_FOUND),
    WALLET_BALANCE_EXCEED(CONFLICT),

    BALANCE_LOG_TYPE_EMPTY(BAD_REQUEST),
    BALANCE_VOLUME_ILLEGAL(BAD_REQUEST),

    BILL_USER_EMPTY(BAD_REQUEST),
    BILL_USER_UNVERIFIED(BAD_REQUEST),
    BILL_MARKET_EMPTY(BAD_REQUEST),
    BILL_TYPE_EMPTY(BAD_REQUEST),
    BILL_PRICE_ILLEGAL(BAD_REQUEST),
    BILL_VOLUME_ILLEGAL(BAD_REQUEST),
    BILL_VOLUME_TOO_SMALL(BAD_REQUEST),
    BILL_MARKET_CLOSE(CONFLICT),
    BILL_STATUS_ILLEGAL(INTERNAL_SERVER_ERROR),
    BILL_NOT_FOUND(NOT_FOUND),

    WITHDRAW_ADDRESS_EMPTY(BAD_REQUEST),
    WITHDRAW_BROKERAGE_ILLEGAL(BAD_REQUEST),
    WITHDRAW_NOT_FOUND(NOT_FOUND),
    WITHDRAW_STATUS_ILLEGAL(INTERNAL_SERVER_ERROR),
    WITHDRAW_PASSCODE_ILLEGAL(INTERNAL_SERVER_ERROR),
    WITHDRAW_USER_UNVERIFIED(INTERNAL_SERVER_ERROR),


    FACEID_ID_EMPTY(BAD_REQUEST),
    FACEID_REMOTE_ERROR(INTERNAL_SERVER_ERROR),
    FACEID_ALREADY_VERIFIED(CONFLICT),
    FACEID_ILLEGAL_IMAGE(INTERNAL_SERVER_ERROR),

    ATTACHMENT_ILLEGAL_ARGUMENTS(BAD_REQUEST),
    ;

    private HttpStatus httpStatus;

    BizErrorCode(HttpStatus httpStatus) {
        this.httpStatus = httpStatus;
    }

    @Override
    public HttpStatus getHttpStatus() {
        return httpStatus;
    }
}
